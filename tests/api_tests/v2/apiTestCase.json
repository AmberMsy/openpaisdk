[
    {
        "description": "get /api/v2/info",
        "tests": [
            {
                "operation": {
                    "tag": "api",
                    "operationId": "getClusterInfo",
                    "parameters": [],
                    "response": {
                        "statusCode": "200",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "PAI RESTfulAPI"
                                },
                                "version": {
                                    "type": "string",
                                    "description": "cluster version in v0.X.0 format"
                                },
                                "launcherType": {
                                    "type": "string",
                                    "enum": [
                                        "yarn",
                                        "k8s"
                                    ]
                                },
                                "authnMethod": {
                                    "type": "string",
                                    "enum": [
                                        "basic",
                                        "OIDC"
                                    ]
                                }
                            },
                            "required": [
                                "name",
                                "version",
                                "launcherType",
                                "authnMethod"
                            ]
                        },
                        "contentType": "application/json"
                    }
                }
            }
        ]
    },
    {
        "description": "get /api/v2/tokens",
        "tests": [
            {
                "operation": {
                    "tag": "token",
                    "operationId": "getTokens",
                    "parameters": [],
                    "response": {
                        "statusCode": "200",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "tokens": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "JWT string list"
                                }
                            },
                            "required": [
                                "tokens"
                            ]
                        },
                        "contentType": "application/json"
                    }
                }
            }
        ]
    },
    {
        "before": [
            {
                "tag": "token",
                "operationId": "createApplicationToken",
                "parameters": []
            }
        ],
        "tests": [
            {
                "operation": {
                    "parameters": [
                        {
                            "type": "fromResult",
                            "resultType": "beforeResults",
                            "resultPath": "token",
                            "resultIndex": 0
                        }
                    ],
                    "tag": "token",
                    "operationId": "deleteToken",
                    "response": {
                        "statusCode": "200",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "enum": [
                                        "BadConfigurationError",
                                        "ConflictJobError",
                                        "ConflictUserError",
                                        "ConflictVcError",
                                        "ForbiddenUserError",
                                        "ForbiddenKeyError",
                                        "IncorrectPasswordError",
                                        "InvalidParametersError",
                                        "NoApiError",
                                        "NoJobError",
                                        "NoJobConfigError",
                                        "NoJobSshInfoError",
                                        "NoUserError",
                                        "NoGroupError",
                                        "NoVirtualClusterError",
                                        "ReadOnlyJobError",
                                        "RemoveAdminError",
                                        "ReadOnlyVcError",
                                        "RemoveRunningVcError",
                                        "UnauthorizedUserError",
                                        "NoEnoughQuotaError",
                                        "NotImplementedError",
                                        "UnknownError"
                                    ]
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "message"
                            ]
                        },
                        "contentType": "application/json"
                    }
                }
            }
        ],
        "description": "delete /api/v2/tokens/{token}"
    },
    {
        "description": "post /api/v2/tokens/application",
        "tests": [
            {
                "operation": {
                    "tag": "token",
                    "operationId": "createApplicationToken",
                    "parameters": [],
                    "response": {
                        "statusCode": "200",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "token": {
                                    "type": "string",
                                    "description": "your access token"
                                },
                                "application": {
                                    "type": "boolean",
                                    "description": "true"
                                }
                            }
                        },
                        "contentType": "application/json"
                    }
                }
            }
        ]
    },
    {
        "description": "get /api/v2/authn/oidc/login",
        "tests": [
            {
                "operation": {
                    "tag": "authn",
                    "operationId": "oidcLogin",
                    "parameters": []
                }
            }
        ]
    },
    {
        "description": "get /api/v2/authn/oidc/logout",
        "tests": [
            {
                "operation": {
                    "tag": "authn",
                    "operationId": "oidcLogout",
                    "parameters": []
                }
            }
        ]
    },
    {
        "description": "post /api/v2/authn/basic/login",
        "tests": [
            {
                "operation": {
                    "tag": "authn",
                    "operationId": "basicLogin",
                    "parameters": [],
                    "response": {
                        "statusCode": "200",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "token": {
                                    "type": "string",
                                    "description": "your access token"
                                },
                                "user": {
                                    "type": "string",
                                    "description": "username"
                                },
                                "admin": {
                                    "type": "boolean",
                                    "description": "true if user is admin"
                                }
                            },
                            "required": [
                                "token",
                                "user",
                                "admin"
                            ]
                        },
                        "contentType": "application/json"
                    }
                }
            }
        ]
    },
    {
        "description": "delete /api/v2/authn/basic/logout",
        "tests": [
            {
                "operation": {
                    "tag": "authn",
                    "operationId": "basicLogout",
                    "parameters": [],
                    "response": {
                        "statusCode": "200",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "enum": [
                                        "BadConfigurationError",
                                        "ConflictJobError",
                                        "ConflictUserError",
                                        "ConflictVcError",
                                        "ForbiddenUserError",
                                        "ForbiddenKeyError",
                                        "IncorrectPasswordError",
                                        "InvalidParametersError",
                                        "NoApiError",
                                        "NoJobError",
                                        "NoJobConfigError",
                                        "NoJobSshInfoError",
                                        "NoUserError",
                                        "NoGroupError",
                                        "NoVirtualClusterError",
                                        "ReadOnlyJobError",
                                        "RemoveAdminError",
                                        "ReadOnlyVcError",
                                        "RemoveRunningVcError",
                                        "UnauthorizedUserError",
                                        "NoEnoughQuotaError",
                                        "NotImplementedError",
                                        "UnknownError"
                                    ]
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "message"
                            ]
                        },
                        "contentType": "application/json"
                    }
                }
            }
        ]
    },
    {
        "description": "post /api/v2/users",
        "tests": [
            {
                "operation": {
                    "tag": "user",
                    "operationId": "createUser",
                    "parameters": [],
                    "response": {
                        "statusCode": "201",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "enum": [
                                        "BadConfigurationError",
                                        "ConflictJobError",
                                        "ConflictUserError",
                                        "ConflictVcError",
                                        "ForbiddenUserError",
                                        "ForbiddenKeyError",
                                        "IncorrectPasswordError",
                                        "InvalidParametersError",
                                        "NoApiError",
                                        "NoJobError",
                                        "NoJobConfigError",
                                        "NoJobSshInfoError",
                                        "NoUserError",
                                        "NoGroupError",
                                        "NoVirtualClusterError",
                                        "ReadOnlyJobError",
                                        "RemoveAdminError",
                                        "ReadOnlyVcError",
                                        "RemoveRunningVcError",
                                        "UnauthorizedUserError",
                                        "NoEnoughQuotaError",
                                        "NotImplementedError",
                                        "UnknownError"
                                    ]
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "message"
                            ]
                        },
                        "contentType": "application/json"
                    }
                }
            }
        ]
    },
    {
        "description": "get /api/v2/users",
        "tests": [
            {
                "operation": {
                    "tag": "user",
                    "operationId": "getAllUser",
                    "parameters": [],
                    "response": {
                        "statusCode": "200",
                        "schema": {
                            "description": "Array with all users in the system.",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "description": "user name"
                                    },
                                    "admin": {
                                        "type": "boolean",
                                        "description": "Admin or not."
                                    },
                                    "virtualCluster": {
                                        "type": "array",
                                        "description": "The list of virtualCluster which the user can access.",
                                        "items": {
                                            "type": "string",
                                            "description": "virtual cluster name."
                                        }
                                    },
                                    "storageConfig": {
                                        "type": "array",
                                        "description": "storageconfig string arry",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "email": {
                                        "type": "string",
                                        "description": "email address"
                                    },
                                    "extension": {
                                        "type": "object",
                                        "description": "extension field."
                                    }
                                },
                                "required": [
                                    "username",
                                    "admin",
                                    "virtualCluster",
                                    "storageConfig",
                                    "email",
                                    "extension"
                                ]
                            }
                        },
                        "contentType": "application/json"
                    }
                }
            }
        ]
    },
    {
        "description": "put /api/v2/users",
        "tests": [
            {
                "operation": {
                    "tag": "user",
                    "operationId": "updateUser",
                    "parameters": [],
                    "response": {
                        "statusCode": "201",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "enum": [
                                        "BadConfigurationError",
                                        "ConflictJobError",
                                        "ConflictUserError",
                                        "ConflictVcError",
                                        "ForbiddenUserError",
                                        "ForbiddenKeyError",
                                        "IncorrectPasswordError",
                                        "InvalidParametersError",
                                        "NoApiError",
                                        "NoJobError",
                                        "NoJobConfigError",
                                        "NoJobSshInfoError",
                                        "NoUserError",
                                        "NoGroupError",
                                        "NoVirtualClusterError",
                                        "ReadOnlyJobError",
                                        "RemoveAdminError",
                                        "ReadOnlyVcError",
                                        "RemoveRunningVcError",
                                        "UnauthorizedUserError",
                                        "NoEnoughQuotaError",
                                        "NotImplementedError",
                                        "UnknownError"
                                    ]
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "message"
                            ]
                        },
                        "contentType": "application/json"
                    }
                }
            }
        ]
    },
    {
        "description": "put /api/v2/users/me",
        "tests": [
            {
                "operation": {
                    "tag": "user",
                    "operationId": "updateUserSelf",
                    "parameters": [],
                    "response": {
                        "statusCode": "201",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "enum": [
                                        "BadConfigurationError",
                                        "ConflictJobError",
                                        "ConflictUserError",
                                        "ConflictVcError",
                                        "ForbiddenUserError",
                                        "ForbiddenKeyError",
                                        "IncorrectPasswordError",
                                        "InvalidParametersError",
                                        "NoApiError",
                                        "NoJobError",
                                        "NoJobConfigError",
                                        "NoJobSshInfoError",
                                        "NoUserError",
                                        "NoGroupError",
                                        "NoVirtualClusterError",
                                        "ReadOnlyJobError",
                                        "RemoveAdminError",
                                        "ReadOnlyVcError",
                                        "RemoveRunningVcError",
                                        "UnauthorizedUserError",
                                        "NoEnoughQuotaError",
                                        "NotImplementedError",
                                        "UnknownError"
                                    ]
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "message"
                            ]
                        },
                        "contentType": "application/json"
                    }
                }
            }
        ]
    },
    {
        "description": "get /api/v2/users/{user}",
        "tests": [
            {
                "operation": {
                    "tag": "user",
                    "operationId": "getUser",
                    "parameters": [],
                    "response": {
                        "statusCode": "200",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "username": {
                                    "type": "string",
                                    "description": "user name"
                                },
                                "admin": {
                                    "type": "boolean",
                                    "description": "Admin or not."
                                },
                                "virtualCluster": {
                                    "type": "array",
                                    "description": "The list of virtualCluster which the user can access.",
                                    "items": {
                                        "type": "string",
                                        "description": "virtual cluster name."
                                    }
                                },
                                "storageConfig": {
                                    "type": "array",
                                    "description": "storageconfig string arry",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "email": {
                                    "type": "string",
                                    "description": "email address"
                                },
                                "extension": {
                                    "type": "object",
                                    "description": "extension field."
                                }
                            },
                            "required": [
                                "username",
                                "admin",
                                "virtualCluster",
                                "storageConfig",
                                "email",
                                "extension"
                            ]
                        },
                        "contentType": "application/json"
                    }
                }
            }
        ]
    },
    {
        "description": "delete /api/v2/users/{user}",
        "tests": [
            {
                "operation": {
                    "tag": "user",
                    "operationId": "deleteUser",
                    "parameters": [],
                    "response": {
                        "statusCode": "200",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "enum": [
                                        "BadConfigurationError",
                                        "ConflictJobError",
                                        "ConflictUserError",
                                        "ConflictVcError",
                                        "ForbiddenUserError",
                                        "ForbiddenKeyError",
                                        "IncorrectPasswordError",
                                        "InvalidParametersError",
                                        "NoApiError",
                                        "NoJobError",
                                        "NoJobConfigError",
                                        "NoJobSshInfoError",
                                        "NoUserError",
                                        "NoGroupError",
                                        "NoVirtualClusterError",
                                        "ReadOnlyJobError",
                                        "RemoveAdminError",
                                        "ReadOnlyVcError",
                                        "RemoveRunningVcError",
                                        "UnauthorizedUserError",
                                        "NoEnoughQuotaError",
                                        "NotImplementedError",
                                        "UnknownError"
                                    ]
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "message"
                            ]
                        },
                        "contentType": "application/json"
                    }
                }
            }
        ]
    },
    {
        "description": "put /api/v2/users/{user}/group/",
        "tests": [
            {
                "operation": {
                    "tag": "user",
                    "operationId": "updateUserGroup",
                    "parameters": [],
                    "response": {
                        "statusCode": "201",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "enum": [
                                        "BadConfigurationError",
                                        "ConflictJobError",
                                        "ConflictUserError",
                                        "ConflictVcError",
                                        "ForbiddenUserError",
                                        "ForbiddenKeyError",
                                        "IncorrectPasswordError",
                                        "InvalidParametersError",
                                        "NoApiError",
                                        "NoJobError",
                                        "NoJobConfigError",
                                        "NoJobSshInfoError",
                                        "NoUserError",
                                        "NoGroupError",
                                        "NoVirtualClusterError",
                                        "ReadOnlyJobError",
                                        "RemoveAdminError",
                                        "ReadOnlyVcError",
                                        "RemoveRunningVcError",
                                        "UnauthorizedUserError",
                                        "NoEnoughQuotaError",
                                        "NotImplementedError",
                                        "UnknownError"
                                    ]
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "message"
                            ]
                        },
                        "contentType": "application/json"
                    }
                }
            }
        ]
    },
    {
        "description": "delete /api/v2/users/{user}/group/",
        "tests": [
            {
                "operation": {
                    "tag": "user",
                    "operationId": "deleteUserGroup",
                    "parameters": [],
                    "response": {
                        "statusCode": "201",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "enum": [
                                        "BadConfigurationError",
                                        "ConflictJobError",
                                        "ConflictUserError",
                                        "ConflictVcError",
                                        "ForbiddenUserError",
                                        "ForbiddenKeyError",
                                        "IncorrectPasswordError",
                                        "InvalidParametersError",
                                        "NoApiError",
                                        "NoJobError",
                                        "NoJobConfigError",
                                        "NoJobSshInfoError",
                                        "NoUserError",
                                        "NoGroupError",
                                        "NoVirtualClusterError",
                                        "ReadOnlyJobError",
                                        "RemoveAdminError",
                                        "ReadOnlyVcError",
                                        "RemoveRunningVcError",
                                        "UnauthorizedUserError",
                                        "NoEnoughQuotaError",
                                        "NotImplementedError",
                                        "UnknownError"
                                    ]
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "message"
                            ]
                        },
                        "contentType": "application/json"
                    }
                }
            }
        ]
    },
    {
        "description": "put /api/v2/users/{user}/grouplist/",
        "tests": [
            {
                "operation": {
                    "tag": "user",
                    "operationId": "updateUserGrouplist",
                    "parameters": [],
                    "response": {
                        "statusCode": "201",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "enum": [
                                        "BadConfigurationError",
                                        "ConflictJobError",
                                        "ConflictUserError",
                                        "ConflictVcError",
                                        "ForbiddenUserError",
                                        "ForbiddenKeyError",
                                        "IncorrectPasswordError",
                                        "InvalidParametersError",
                                        "NoApiError",
                                        "NoJobError",
                                        "NoJobConfigError",
                                        "NoJobSshInfoError",
                                        "NoUserError",
                                        "NoGroupError",
                                        "NoVirtualClusterError",
                                        "ReadOnlyJobError",
                                        "RemoveAdminError",
                                        "ReadOnlyVcError",
                                        "RemoveRunningVcError",
                                        "UnauthorizedUserError",
                                        "NoEnoughQuotaError",
                                        "NotImplementedError",
                                        "UnknownError"
                                    ]
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "message"
                            ]
                        },
                        "contentType": "application/json"
                    }
                }
            }
        ]
    },
    {
        "description": "get /api/v2/groups",
        "tests": [
            {
                "operation": {
                    "tag": "group",
                    "operationId": "getAllGroup",
                    "parameters": [],
                    "response": {
                        "statusCode": "200",
                        "schema": {
                            "description": "Array with all groups in the system.",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "groupname": {
                                        "type": "string",
                                        "description": "group name"
                                    },
                                    "description": {
                                        "type": "string",
                                        "description": "description for the group"
                                    },
                                    "externalName": {
                                        "type": "string",
                                        "description": "the external group name binding with the group in OpenPAI"
                                    },
                                    "extension": {
                                        "type": "object"
                                    }
                                }
                            }
                        },
                        "contentType": "application/json"
                    }
                }
            }
        ]
    },
    {
        "description": "post /api/v2/groups",
        "tests": [
            {
                "operation": {
                    "tag": "group",
                    "operationId": "createGroup",
                    "parameters": [],
                    "response": {
                        "statusCode": "201",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "enum": [
                                        "BadConfigurationError",
                                        "ConflictJobError",
                                        "ConflictUserError",
                                        "ConflictVcError",
                                        "ForbiddenUserError",
                                        "ForbiddenKeyError",
                                        "IncorrectPasswordError",
                                        "InvalidParametersError",
                                        "NoApiError",
                                        "NoJobError",
                                        "NoJobConfigError",
                                        "NoJobSshInfoError",
                                        "NoUserError",
                                        "NoGroupError",
                                        "NoVirtualClusterError",
                                        "ReadOnlyJobError",
                                        "RemoveAdminError",
                                        "ReadOnlyVcError",
                                        "RemoveRunningVcError",
                                        "UnauthorizedUserError",
                                        "NoEnoughQuotaError",
                                        "NotImplementedError",
                                        "UnknownError"
                                    ]
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "message"
                            ]
                        },
                        "contentType": "application/json"
                    }
                }
            }
        ]
    },
    {
        "description": "put /api/v2/groups",
        "tests": [
            {
                "operation": {
                    "tag": "group",
                    "operationId": "updateGroup",
                    "parameters": [],
                    "response": {
                        "statusCode": "201",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "enum": [
                                        "BadConfigurationError",
                                        "ConflictJobError",
                                        "ConflictUserError",
                                        "ConflictVcError",
                                        "ForbiddenUserError",
                                        "ForbiddenKeyError",
                                        "IncorrectPasswordError",
                                        "InvalidParametersError",
                                        "NoApiError",
                                        "NoJobError",
                                        "NoJobConfigError",
                                        "NoJobSshInfoError",
                                        "NoUserError",
                                        "NoGroupError",
                                        "NoVirtualClusterError",
                                        "ReadOnlyJobError",
                                        "RemoveAdminError",
                                        "ReadOnlyVcError",
                                        "RemoveRunningVcError",
                                        "UnauthorizedUserError",
                                        "NoEnoughQuotaError",
                                        "NotImplementedError",
                                        "UnknownError"
                                    ]
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "message"
                            ]
                        },
                        "contentType": "application/json"
                    }
                }
            }
        ]
    },
    {
        "description": "get /api/v2/groups/{group}",
        "tests": [
            {
                "operation": {
                    "tag": "group",
                    "operationId": "getGroup",
                    "parameters": [],
                    "response": {
                        "statusCode": "200",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "groupname": {
                                    "type": "string",
                                    "description": "group name"
                                },
                                "description": {
                                    "type": "string",
                                    "description": "description for the group"
                                },
                                "externalName": {
                                    "type": "string",
                                    "description": "the external group name binding with the group in OpenPAI"
                                },
                                "extension": {
                                    "type": "object"
                                }
                            },
                            "required": [
                                "groupname",
                                "description",
                                "externalName",
                                "extension"
                            ]
                        },
                        "contentType": "application/json"
                    }
                }
            }
        ]
    },
    {
        "description": "delete /api/v2/groups/{group}",
        "tests": [
            {
                "operation": {
                    "tag": "group",
                    "operationId": "deleteGroup",
                    "parameters": [],
                    "response": {
                        "statusCode": "201",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "enum": [
                                        "BadConfigurationError",
                                        "ConflictJobError",
                                        "ConflictUserError",
                                        "ConflictVcError",
                                        "ForbiddenUserError",
                                        "ForbiddenKeyError",
                                        "IncorrectPasswordError",
                                        "InvalidParametersError",
                                        "NoApiError",
                                        "NoJobError",
                                        "NoJobConfigError",
                                        "NoJobSshInfoError",
                                        "NoUserError",
                                        "NoGroupError",
                                        "NoVirtualClusterError",
                                        "ReadOnlyJobError",
                                        "RemoveAdminError",
                                        "ReadOnlyVcError",
                                        "RemoveRunningVcError",
                                        "UnauthorizedUserError",
                                        "NoEnoughQuotaError",
                                        "NotImplementedError",
                                        "UnknownError"
                                    ]
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "message"
                            ]
                        },
                        "contentType": "application/json"
                    }
                }
            }
        ]
    },
    {
        "description": "get /api/v2/groups/{group}/userlist",
        "tests": [
            {
                "operation": {
                    "tag": "group",
                    "operationId": "getGroupMembers",
                    "parameters": [],
                    "response": {
                        "statusCode": "200",
                        "schema": {
                            "description": "Array with all users in the group.",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "description": "user name"
                                    },
                                    "clusterAdmin": {
                                        "type": "boolean",
                                        "description": "Cluster admin or not."
                                    }
                                }
                            }
                        },
                        "contentType": "application/json"
                    }
                }
            }
        ]
    },
    {
        "description": "get /api/v2/virtual-clusters",
        "tests": [
            {
                "operation": {
                    "tag": "virtual cluster",
                    "operationId": "listVirtualClusters",
                    "parameters": [],
                    "response": {
                        "statusCode": "200",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object",
                                "properties": {
                                    "capacity": {
                                        "type": "integer",
                                        "description": "capacity percentage this virtual cluster can use of entire cluster"
                                    },
                                    "usedCapacity": {
                                        "type": "integer",
                                        "description": "used capacity percentage this virtual cluster can use of entire cluster"
                                    },
                                    "maxCapacity": {
                                        "type": "integer",
                                        "description": "max capacity percentage this virtual cluster can use of entire cluster"
                                    },
                                    "dedicated": {
                                        "type": "boolean",
                                        "description": "dedicated virtual cluster or not"
                                    },
                                    "resourcesUsed": {
                                        "type": "object",
                                        "description": "used resources",
                                        "properties": {
                                            "cpu": {
                                                "type": "integer",
                                                "description": "used cpu number"
                                            },
                                            "vCores": {
                                                "type": "integer",
                                                "description": "same as cpu"
                                            },
                                            "memory": {
                                                "type": "integer",
                                                "description": "used memory in MB"
                                            },
                                            "gpu": {
                                                "type": "integer",
                                                "description": "used gpu number"
                                            },
                                            "GPUs": {
                                                "type": "integer",
                                                "description": "same as gpu"
                                            }
                                        }
                                    },
                                    "resourcesGuaranteed": {
                                        "type": "object",
                                        "description": "guaranteed resources, including used and free",
                                        "properties": {
                                            "cpu": {
                                                "type": "integer",
                                                "description": "guaranteed cpu number"
                                            },
                                            "vCores": {
                                                "type": "integer",
                                                "description": "same as cpu"
                                            },
                                            "memory": {
                                                "type": "integer",
                                                "description": "guaranteed memory in MB"
                                            },
                                            "gpu": {
                                                "type": "integer",
                                                "description": "guaranteed gpu number"
                                            },
                                            "GPUs": {
                                                "type": "integer",
                                                "description": "same as gpu"
                                            }
                                        }
                                    },
                                    "resourcesTotal": {
                                        "type": "object",
                                        "description": "total resources, including guaranteed and bad",
                                        "properties": {
                                            "cpu": {
                                                "type": "integer",
                                                "description": "total cpu number"
                                            },
                                            "vCores": {
                                                "type": "integer",
                                                "description": "same as cpu"
                                            },
                                            "memory": {
                                                "type": "integer",
                                                "description": "total memory in MB"
                                            },
                                            "gpu": {
                                                "type": "integer",
                                                "description": "total gpu number"
                                            },
                                            "GPUs": {
                                                "type": "integer",
                                                "description": "same as gpu"
                                            }
                                        }
                                    }
                                },
                                "required": [
                                    "capacity",
                                    "usedCapacity",
                                    "maxCapacity",
                                    "resourcesUsed",
                                    "resourcesGuaranteed",
                                    "resourcesTotal"
                                ]
                            }
                        },
                        "contentType": "application/json"
                    }
                }
            }
        ]
    },
    {
        "description": "get /api/v2/virtual-clusters/{vc}",
        "tests": [
            {
                "operation": {
                    "tag": "virtual cluster",
                    "operationId": "getVirtualCluster",
                    "parameters": [],
                    "response": {
                        "statusCode": "200",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "capacity": {
                                    "type": "integer",
                                    "description": "capacity percentage this virtual cluster can use of entire cluster"
                                },
                                "usedCapacity": {
                                    "type": "integer",
                                    "description": "used capacity percentage this virtual cluster can use of entire cluster"
                                },
                                "maxCapacity": {
                                    "type": "integer",
                                    "description": "max capacity percentage this virtual cluster can use of entire cluster"
                                },
                                "dedicated": {
                                    "type": "boolean",
                                    "description": "dedicated virtual cluster or not"
                                },
                                "resourcesUsed": {
                                    "type": "object",
                                    "description": "used resources",
                                    "properties": {
                                        "cpu": {
                                            "type": "integer",
                                            "description": "used cpu number"
                                        },
                                        "vCores": {
                                            "type": "integer",
                                            "description": "same as cpu"
                                        },
                                        "memory": {
                                            "type": "integer",
                                            "description": "used memory in MB"
                                        },
                                        "gpu": {
                                            "type": "integer",
                                            "description": "used gpu number"
                                        },
                                        "GPUs": {
                                            "type": "integer",
                                            "description": "same as gpu"
                                        }
                                    }
                                },
                                "resourcesGuaranteed": {
                                    "type": "object",
                                    "description": "guaranteed resources, including used and free",
                                    "properties": {
                                        "cpu": {
                                            "type": "integer",
                                            "description": "guaranteed cpu number"
                                        },
                                        "vCores": {
                                            "type": "integer",
                                            "description": "same as cpu"
                                        },
                                        "memory": {
                                            "type": "integer",
                                            "description": "guaranteed memory in MB"
                                        },
                                        "gpu": {
                                            "type": "integer",
                                            "description": "guaranteed gpu number"
                                        },
                                        "GPUs": {
                                            "type": "integer",
                                            "description": "same as gpu"
                                        }
                                    }
                                },
                                "resourcesTotal": {
                                    "type": "object",
                                    "description": "total resources, including guaranteed and bad",
                                    "properties": {
                                        "cpu": {
                                            "type": "integer",
                                            "description": "total cpu number"
                                        },
                                        "vCores": {
                                            "type": "integer",
                                            "description": "same as cpu"
                                        },
                                        "memory": {
                                            "type": "integer",
                                            "description": "total memory in MB"
                                        },
                                        "gpu": {
                                            "type": "integer",
                                            "description": "total gpu number"
                                        },
                                        "GPUs": {
                                            "type": "integer",
                                            "description": "same as gpu"
                                        }
                                    }
                                }
                            },
                            "required": [
                                "capacity",
                                "usedCapacity",
                                "maxCapacity",
                                "resourcesUsed",
                                "resourcesGuaranteed",
                                "resourcesTotal"
                            ]
                        },
                        "contentType": "application/json"
                    }
                }
            }
        ]
    },
    {
        "description": "get /api/v2/virtual-clusters/{vc}/sku-types",
        "tests": [
            {
                "operation": {
                    "tag": "virtual cluster",
                    "operationId": "getVirtualClusterSkuTypes",
                    "parameters": [],
                    "response": {
                        "statusCode": "200",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object",
                                "properties": {
                                    "cpu": {
                                        "type": "integer"
                                    },
                                    "memory": {
                                        "type": "integer"
                                    },
                                    "gpu": {
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "cpu",
                                    "memory",
                                    "gpu"
                                ]
                            }
                        },
                        "contentType": "application/json"
                    }
                }
            }
        ]
    },
    {
        "description": "get /api/v2/storages",
        "tests": [
            {
                "operation": {
                    "tag": "storage",
                    "operationId": "getStorages",
                    "parameters": [],
                    "response": {
                        "statusCode": "200",
                        "schema": {
                            "type": "object",
                            "description": "summary of configured PV storage",
                            "properties": {
                                "storages": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "description": "summary of each storage",
                                        "properties": {
                                            "name": {
                                                "type": "string"
                                            },
                                            "share": {
                                                "type": "boolean"
                                            },
                                            "volumeName": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "name",
                                            "share",
                                            "volumeName"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "storages"
                            ]
                        },
                        "contentType": "application/json"
                    }
                }
            }
        ]
    },
    {
        "description": "get /api/v2/storages/{storage}",
        "tests": [
            {
                "operation": {
                    "tag": "storage",
                    "operationId": "getStorage",
                    "parameters": [],
                    "response": {
                        "statusCode": "200",
                        "schema": {
                            "type": "object",
                            "description": "detail of configured PV storage",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "share": {
                                    "type": "boolean"
                                },
                                "volumeName": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "nfs",
                                        "samba",
                                        "azureFile",
                                        "azureBlob",
                                        "other",
                                        "unknown"
                                    ]
                                },
                                "data": {
                                    "oneOf": [
                                        {
                                            "type": "object",
                                            "description": "nfs type",
                                            "properties": {
                                                "server": {
                                                    "type": "string"
                                                },
                                                "path": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "server",
                                                "path"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "description": "samba type",
                                            "properties": {
                                                "address": {
                                                    "type": "string"
                                                },
                                                "username": {
                                                    "type": "string"
                                                },
                                                "password": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "address"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "description": "azureFile type",
                                            "properties": {
                                                "shareName": {
                                                    "type": "string"
                                                },
                                                "accountName": {
                                                    "type": "string"
                                                },
                                                "accountKey": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "shareName"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "description": "azureBlob type",
                                            "properties": {
                                                "containerName": {
                                                    "type": "string"
                                                },
                                                "accountName": {
                                                    "type": "string"
                                                },
                                                "accountKey": {
                                                    "type": "string"
                                                },
                                                "accountSASToken": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "containerName"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "description": "other/unknown type",
                                            "properties": {}
                                        }
                                    ]
                                },
                                "secretName": {
                                    "type": "string"
                                },
                                "mountOptions": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "required": [
                                "name",
                                "share",
                                "volumeName",
                                "type",
                                "data"
                            ]
                        },
                        "contentType": "application/json"
                    }
                }
            }
        ]
    },
    {
        "description": "post /api/v2/jobs",
        "tests": [
            {
                "operation": {
                    "tag": "job",
                    "operationId": "createJob",
                    "parameters": [],
                    "response": {
                        "statusCode": "202",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "enum": [
                                        "BadConfigurationError",
                                        "ConflictJobError",
                                        "ConflictUserError",
                                        "ConflictVcError",
                                        "ForbiddenUserError",
                                        "ForbiddenKeyError",
                                        "IncorrectPasswordError",
                                        "InvalidParametersError",
                                        "NoApiError",
                                        "NoJobError",
                                        "NoJobConfigError",
                                        "NoJobSshInfoError",
                                        "NoUserError",
                                        "NoGroupError",
                                        "NoVirtualClusterError",
                                        "ReadOnlyJobError",
                                        "RemoveAdminError",
                                        "ReadOnlyVcError",
                                        "RemoveRunningVcError",
                                        "UnauthorizedUserError",
                                        "NoEnoughQuotaError",
                                        "NotImplementedError",
                                        "UnknownError"
                                    ]
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "message"
                            ]
                        },
                        "contentType": "application/json"
                    }
                }
            }
        ]
    },
    {
        "description": "get /api/v2/jobs",
        "tests": [
            {
                "operation": {
                    "tag": "job",
                    "operationId": "listJobs",
                    "parameters": [],
                    "response": {
                        "statusCode": "200",
                        "schema": {
                            "type": "array",
                            "description": "job summary list",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "job name"
                                    },
                                    "username": {
                                        "type": "string",
                                        "description": "user name"
                                    },
                                    "state": {
                                        "type": "string",
                                        "description": "general job state",
                                        "enum": [
                                            "WAITING",
                                            "RUNNING",
                                            "STOPPING",
                                            "STOPPED",
                                            "SUCCEEDED",
                                            "FAILED",
                                            "UNKNOWN"
                                        ]
                                    },
                                    "subState": {
                                        "type": "string",
                                        "description": "job state in framework controller",
                                        "enum": [
                                            "AttemptCreationPending",
                                            "AttemptCreationRequested",
                                            "AttemptPreparing",
                                            "AttemptRunning",
                                            "AttemptDeletionPending",
                                            "AttemptDeletionRequested",
                                            "AttemptDeleting",
                                            "AttemptCompleted",
                                            "Completed"
                                        ]
                                    },
                                    "executionType": {
                                        "type": "string",
                                        "description": "start or stop",
                                        "enum": [
                                            "START",
                                            "STOP"
                                        ]
                                    },
                                    "retries": {
                                        "type": "integer",
                                        "description": "job retried times"
                                    },
                                    "retryDetails": {
                                        "type": "object",
                                        "properties": {
                                            "user": {
                                                "type": "integer"
                                            },
                                            "platform": {
                                                "type": "integer"
                                            },
                                            "resource": {
                                                "type": "integer"
                                            }
                                        }
                                    },
                                    "retryDelayTime": {
                                        "type": "integer",
                                        "description": "retry delay time"
                                    },
                                    "createdTime": {
                                        "type": "integer",
                                        "description": "job created time, in number of milliseconds since the Unix Epoch."
                                    },
                                    "completedTime": {
                                        "type": "integer",
                                        "description": "job completed time, in number of milliseconds since the Unix Epoch."
                                    },
                                    "appExitCode": {
                                        "type": "integer",
                                        "description": "job exit code"
                                    },
                                    "virtualCluster": {
                                        "type": "string",
                                        "description": "virtual cluster to which the job submitted"
                                    },
                                    "totalGpuNumber": {
                                        "type": "integer",
                                        "description": "total gpu number used in the job"
                                    },
                                    "totalTaskNumber": {
                                        "type": "integer",
                                        "description": "total task number used in the job"
                                    },
                                    "totalTaskRoleNumber": {
                                        "type": "integer",
                                        "description": "total task role number used in the job"
                                    },
                                    "debugId": {
                                        "type": "string",
                                        "description": "md5 hash name for the job in framework controller, used for debug purpose"
                                    }
                                },
                                "required": [
                                    "name",
                                    "username",
                                    "virtualCluster",
                                    "state",
                                    "subState",
                                    "executionType",
                                    "retries",
                                    "createdTime",
                                    "completedTime",
                                    "appExitCode"
                                ]
                            }
                        },
                        "contentType": "application/json"
                    }
                }
            }
        ]
    },
    {
        "description": "get /api/v2/jobs/{user}~{job}",
        "tests": [
            {
                "operation": {
                    "tag": "job",
                    "operationId": "getJob",
                    "parameters": [],
                    "response": {
                        "statusCode": "200",
                        "schema": {
                            "type": "object",
                            "description": "job details",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "job name"
                                },
                                "jobStatus": {
                                    "type": "object",
                                    "description": "job status",
                                    "properties": {
                                        "username": {
                                            "type": "string",
                                            "description": "user name"
                                        },
                                        "state": {
                                            "type": "string",
                                            "description": "general job state",
                                            "enum": [
                                                "WAITING",
                                                "RUNNING",
                                                "STOPPING",
                                                "STOPPED",
                                                "SUCCEEDED",
                                                "FAILED",
                                                "UNKNOWN"
                                            ]
                                        },
                                        "subState": {
                                            "type": "string",
                                            "description": "job state in framework controller",
                                            "enum": [
                                                "AttemptCreationPending",
                                                "AttemptCreationRequested",
                                                "AttemptPreparing",
                                                "AttemptRunning",
                                                "AttemptDeletionPending",
                                                "AttemptDeletionRequested",
                                                "AttemptDeleting",
                                                "AttemptCompleted",
                                                "Completed"
                                            ]
                                        },
                                        "executionType": {
                                            "type": "string",
                                            "description": "start or stop",
                                            "enum": [
                                                "START",
                                                "STOP"
                                            ]
                                        },
                                        "retries": {
                                            "type": "integer",
                                            "description": "job retried times"
                                        },
                                        "retryDetails": {
                                            "type": "object",
                                            "properties": {
                                                "user": {
                                                    "type": "integer"
                                                },
                                                "platform": {
                                                    "type": "integer"
                                                },
                                                "resource": {
                                                    "type": "integer"
                                                }
                                            }
                                        },
                                        "retryDelayTime": {
                                            "type": "integer",
                                            "description": "retry delay time"
                                        },
                                        "createdTime": {
                                            "type": "integer",
                                            "description": "job created time, in number of milliseconds since the Unix Epoch."
                                        },
                                        "completedTime": {
                                            "type": "integer",
                                            "description": "job completed time, in number of milliseconds since the Unix Epoch."
                                        },
                                        "appId": {
                                            "type": "string",
                                            "description": "unique id for the job"
                                        },
                                        "appLaunchedTime": {
                                            "type": "integer",
                                            "description": "job launched time for last attempt, in number of milliseconds since the Unix Epoch."
                                        },
                                        "appCompletedTime": {
                                            "type": "integer",
                                            "description": "job completed time for last attempt, in number of milliseconds since the Unix Epoch. to get durations for last attempt:\n  wholeDuration = completedTime - createdTime;\n  runningDuration = appCompletedTime - appLaunchedTime;\n  waitingDuration = wholeDuration - runningDuration.\nto get durations for all attempts:\n  runningDuration = sum(appCompletedTime - appLaunchedTime) for all attempts.\n"
                                        },
                                        "appExitCode": {
                                            "type": "integer",
                                            "description": "job exit code"
                                        },
                                        "appExitSpec": {
                                            "type": "object",
                                            "description": "job exit spec",
                                            "properties": {
                                                "code": {
                                                    "type": "integer"
                                                },
                                                "phrase": {
                                                    "type": "string"
                                                },
                                                "issuer": {
                                                    "type": "string"
                                                },
                                                "causer": {
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "type": "string"
                                                },
                                                "stage": {
                                                    "type": "string"
                                                },
                                                "behavior": {
                                                    "type": "string"
                                                },
                                                "reaction": {
                                                    "type": "string"
                                                },
                                                "repro": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "appExitDiagnostics": {
                                            "type": "string",
                                            "description": "job exit diagnostics"
                                        },
                                        "appExitMessages": {
                                            "type": "object",
                                            "properties": {
                                                "container": {
                                                    "type": "string"
                                                },
                                                "runtime": {
                                                    "type": "string"
                                                },
                                                "launcher": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "appExitTriggerMessage": {
                                            "type": "string",
                                            "description": "job completion message"
                                        },
                                        "appExitTriggerTaskRoleName": {
                                            "type": "string",
                                            "description": "task role name which triggered job completion"
                                        },
                                        "appExitTriggerTaskIndex": {
                                            "type": "integer",
                                            "description": "task index which triggered job completion"
                                        },
                                        "appExitType": {
                                            "type": "string",
                                            "description": "job completion type"
                                        },
                                        "virtualCluster": {
                                            "type": "string",
                                            "description": "virtual cluster to which the job submitted"
                                        }
                                    },
                                    "required": [
                                        "username",
                                        "virtualCluster",
                                        "state",
                                        "subState",
                                        "executionType",
                                        "retries",
                                        "createdTime",
                                        "completedTime",
                                        "appId",
                                        "appLaunchedTime",
                                        "appCompletedTime",
                                        "appExitCode"
                                    ]
                                },
                                "taskRoles": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "object",
                                        "description": "task role status",
                                        "properties": {
                                            "taskRoleStatus": {
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "description": "task role name"
                                                    }
                                                },
                                                "required": [
                                                    "name"
                                                ]
                                            },
                                            "taskStatuses": {
                                                "type": "array",
                                                "description": "task statuses in the task role",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "taskIndex": {
                                                            "type": "integer",
                                                            "description": "task index"
                                                        },
                                                        "taskState": {
                                                            "type": "string",
                                                            "description": "task state",
                                                            "enum": [
                                                                "WAITING",
                                                                "RUNNING",
                                                                "STOPPING",
                                                                "STOPPED",
                                                                "SUCCEEDED",
                                                                "FAILED",
                                                                "UNKNOWN"
                                                            ]
                                                        },
                                                        "containerId": {
                                                            "type": "string",
                                                            "description": "uid of the task container"
                                                        },
                                                        "containerIp": {
                                                            "type": "string",
                                                            "description": "ip of the task container"
                                                        },
                                                        "containerPorts": {
                                                            "type": "object",
                                                            "description": "ports of the task container"
                                                        },
                                                        "containerGpus": {
                                                            "type": "string",
                                                            "description": "gpu of the task container"
                                                        },
                                                        "containerLog": {
                                                            "type": "string",
                                                            "description": "log url of the task container"
                                                        },
                                                        "containerExitCode": {
                                                            "type": "integer",
                                                            "description": "exit code the task container"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "required": [
                                            "taskRoleStatus",
                                            "taskStatuses"
                                        ]
                                    }
                                },
                                "debugId": {
                                    "type": "string",
                                    "description": "md5 hash name for the job in framework controller, used for debug purpose"
                                }
                            },
                            "required": [
                                "name",
                                "jobStatus",
                                "taskRoles"
                            ]
                        },
                        "contentType": "application/json"
                    }
                }
            }
        ]
    },
    {
        "description": "get /api/v2/jobs/{user}~{job}/config",
        "tests": [
            {
                "operation": {
                    "tag": "job",
                    "operationId": "getJobConfig",
                    "parameters": [],
                    "response": {
                        "statusCode": "200",
                        "schema": {
                            "type": "object",
                            "description": "openpai job protocol",
                            "properties": {
                                "protocolVersion": {
                                    "type": "string",
                                    "description": "Protocol version, current version is 2."
                                },
                                "name": {
                                    "type": "string",
                                    "maxLength": 255,
                                    "description": "String in ^[a-zA-Z0-9_-]+$ format, no longer than 255 characters."
                                },
                                "type": {
                                    "type": "string",
                                    "description": "Component type, should be \"job\" here."
                                },
                                "version": {
                                    "type": "string",
                                    "description": "Component version, default is latest."
                                },
                                "contributor": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "prerequisites": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "data",
                                                    "script",
                                                    "dockerimage",
                                                    "output"
                                                ]
                                            },
                                            "version": {
                                                "type": "string"
                                            },
                                            "contributor": {
                                                "type": "string"
                                            },
                                            "description": {
                                                "type": "string"
                                            },
                                            "auth": {
                                                "type": "object",
                                                "properties": {
                                                    "username": {
                                                        "type": "string"
                                                    },
                                                    "password": {
                                                        "type": "string"
                                                    },
                                                    "registryuri": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "uri": {
                                                "oneOf": [
                                                    {
                                                        "type": "string"
                                                    },
                                                    {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                },
                                "parameters": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "secrets": {
                                    "type": "object",
                                    "additionalProperties": true
                                },
                                "jobRetryCount": {
                                    "type": "integer",
                                    "description": "Default is 0."
                                },
                                "taskRoles": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "object",
                                        "properties": {
                                            "instances": {
                                                "type": "integer",
                                                "description": "Default is 1, instances of a taskRole, no less than 1."
                                            },
                                            "completion": {
                                                "type": "object",
                                                "description": "Completion poclicy for the job.",
                                                "properties": {
                                                    "minFailedInstances": {
                                                        "type": "integer"
                                                    },
                                                    "minSucceededInstances": {
                                                        "type": "integer"
                                                    }
                                                }
                                            },
                                            "taskRetryCount": {
                                                "type": "integer",
                                                "description": "Default is 0."
                                            },
                                            "dockerImage": {
                                                "type": "string",
                                                "description": "Should reference to a dockerimage defined in prerequisites."
                                            },
                                            "data": {
                                                "type": "string"
                                            },
                                            "output": {
                                                "type": "string"
                                            },
                                            "script": {
                                                "type": "string"
                                            },
                                            "extraContainerOptions": {
                                                "type": "object",
                                                "properties": {
                                                    "shmMB": {
                                                        "type": "integer",
                                                        "description": "Config the /dev/shm in a docker container."
                                                    },
                                                    "infiniband": {
                                                        "type": "boolean",
                                                        "description": "Use InfiniBand devices or not in a docker container."
                                                    }
                                                }
                                            },
                                            "resourcePerInstance": {
                                                "type": "object",
                                                "properties": {
                                                    "cpu": {
                                                        "type": "integer",
                                                        "description": "CPU number, unit is CPU vcore."
                                                    },
                                                    "memoryMB": {
                                                        "type": "integer",
                                                        "description": "Memory number, unit is MB."
                                                    },
                                                    "gpu": {
                                                        "type": "integer",
                                                        "description": "GPU number, unit is GPU card."
                                                    },
                                                    "ports": {
                                                        "type": "object",
                                                        "additionalProperties": {
                                                            "type": "integer",
                                                            "description": "Port number for the port label."
                                                        }
                                                    }
                                                }
                                            },
                                            "commands": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "required": [
                                            "dockerImage",
                                            "resourcePerInstance",
                                            "commands"
                                        ]
                                    }
                                },
                                "deployments": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string"
                                            },
                                            "taskRoles": {
                                                "type": "object",
                                                "additionalProperties": {
                                                    "type": "object",
                                                    "properties": {
                                                        "preCommands": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "postCommands": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "defaults": {
                                    "type": "object",
                                    "description": "Default cluster specific settings.",
                                    "properties": {
                                        "virtualCluster": {
                                            "type": "string"
                                        },
                                        "deployment": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "extras": {
                                    "type": "object",
                                    "description": "Extra field, save any information that plugin may use.",
                                    "properties": {
                                        "submitFrom": {
                                            "type": "string"
                                        },
                                        "hivedscheduler": {
                                            "type": "object",
                                            "properties": {
                                                "jobPriorityClass": {
                                                    "type": "string"
                                                },
                                                "taskRoles": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                        "type": "object",
                                                        "properties": {
                                                            "gpuType": {
                                                                "type": "string"
                                                            },
                                                            "reservationId": {
                                                                "type": "string"
                                                            },
                                                            "affinityGroupName": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "required": [
                                "protocolVersion",
                                "name",
                                "type",
                                "taskRoles"
                            ]
                        },
                        "contentType": "text/yaml"
                    }
                }
            }
        ]
    },
    {
        "description": "put /api/v2/jobs/{user}~{job}/exectionType",
        "tests": [
            {
                "operation": {
                    "tag": "job",
                    "operationId": "updateJobExecutionType",
                    "parameters": [],
                    "response": {
                        "statusCode": "202",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "enum": [
                                        "BadConfigurationError",
                                        "ConflictJobError",
                                        "ConflictUserError",
                                        "ConflictVcError",
                                        "ForbiddenUserError",
                                        "ForbiddenKeyError",
                                        "IncorrectPasswordError",
                                        "InvalidParametersError",
                                        "NoApiError",
                                        "NoJobError",
                                        "NoJobConfigError",
                                        "NoJobSshInfoError",
                                        "NoUserError",
                                        "NoGroupError",
                                        "NoVirtualClusterError",
                                        "ReadOnlyJobError",
                                        "RemoveAdminError",
                                        "ReadOnlyVcError",
                                        "RemoveRunningVcError",
                                        "UnauthorizedUserError",
                                        "NoEnoughQuotaError",
                                        "NotImplementedError",
                                        "UnknownError"
                                    ]
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "message"
                            ]
                        },
                        "contentType": "application/json"
                    }
                }
            }
        ]
    },
    {
        "description": "get /api/v2/jobs/{user}~{job}/job-attempts/healthz",
        "tests": [
            {
                "operation": {
                    "tag": "job history",
                    "operationId": "getJobAttemptsHealthz",
                    "parameters": [],
                    "response": {
                        "statusCode": "200"
                    }
                }
            }
        ]
    },
    {
        "description": "get /api/v2/jobs/{user}~{job}/job-attempts",
        "tests": [
            {
                "operation": {
                    "tag": "job history",
                    "operationId": "getJobAttempts",
                    "parameters": [],
                    "response": {
                        "statusCode": "200",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "description": "job attempt",
                                "properties": {
                                    "jobName": {
                                        "type": "string"
                                    },
                                    "frameworkName": {
                                        "type": "string"
                                    },
                                    "uid": {
                                        "type": "string"
                                    },
                                    "userName": {
                                        "type": "string"
                                    },
                                    "state": {
                                        "type": "string"
                                    },
                                    "originState": {
                                        "type": "string"
                                    },
                                    "maxAttemptCount": {
                                        "type": "integer"
                                    },
                                    "attemptIndex": {
                                        "type": "integer"
                                    },
                                    "jobStartedTime": {
                                        "type": "integer"
                                    },
                                    "attemptStartedTime": {
                                        "type": "integer"
                                    },
                                    "attemptCompletedTime": {
                                        "type": "integer"
                                    },
                                    "exitCode": {
                                        "type": "integer"
                                    },
                                    "exitPhrase": {
                                        "type": "string"
                                    },
                                    "exitType": {
                                        "type": "string"
                                    },
                                    "exitDiagnostics": {
                                        "type": "object",
                                        "properties": {
                                            "diagnosticsSummary": {
                                                "type": "string"
                                            },
                                            "runtime": {
                                                "type": "object",
                                                "properties": {
                                                    "exitCode": {
                                                        "type": "integer"
                                                    },
                                                    "originUserExitCode": {
                                                        "type": "integer"
                                                    },
                                                    "errorLogs": {
                                                        "type": "object",
                                                        "properties": {
                                                            "user": {
                                                                "type": "string"
                                                            },
                                                            "platform": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "launcher": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "appExitTriggerMessage": {
                                        "type": "string"
                                    },
                                    "appExitTriggerTaskRoleName": {
                                        "type": "string"
                                    },
                                    "appExitTriggerTaskIndex": {
                                        "type": "integer"
                                    },
                                    "appExitSpec": {
                                        "type": "object",
                                        "properties": {
                                            "code": {
                                                "type": "integer"
                                            },
                                            "phrase": {
                                                "type": "string"
                                            },
                                            "issuer": {
                                                "type": "string"
                                            },
                                            "causer": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string"
                                            },
                                            "stage": {
                                                "type": "string"
                                            },
                                            "behavior": {
                                                "type": "string"
                                            },
                                            "reaction": {
                                                "type": "string"
                                            },
                                            "reason": {
                                                "type": "string"
                                            },
                                            "repro": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "solution": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "appExitDiagnostics": {
                                        "type": "string"
                                    },
                                    "appExitMessages": {
                                        "type": "object",
                                        "properties": {
                                            "container": {
                                                "type": "string"
                                            },
                                            "runtime": {
                                                "type": "object",
                                                "properties": {
                                                    "exitCode": {
                                                        "type": "integer"
                                                    },
                                                    "originUserExitCode": {
                                                        "type": "integer"
                                                    },
                                                    "errorLogs": {
                                                        "type": "object",
                                                        "properties": {
                                                            "user": {
                                                                "type": "string"
                                                            },
                                                            "platform": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "launcher": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "totalGpuNumber": {
                                        "type": "integer"
                                    },
                                    "totalTasknumber": {
                                        "type": "integer"
                                    },
                                    "totalTaskRoleNumber": {
                                        "type": "integer"
                                    },
                                    "taskRoles": {
                                        "type": "object",
                                        "properties": {
                                            "taskrole": {
                                                "type": "object",
                                                "properties": {
                                                    "taskRoleStatus": {
                                                        "type": "object",
                                                        "properties": {
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "taskStatuses": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "taskIndex": {
                                                                    "type": "integer"
                                                                },
                                                                "taskState": {
                                                                    "type": "string"
                                                                },
                                                                "containerId": {
                                                                    "type": "string"
                                                                },
                                                                "containerIp": {
                                                                    "type": "string"
                                                                },
                                                                "containerGpus": {
                                                                    "type": "string"
                                                                },
                                                                "containerLog": {
                                                                    "type": "string"
                                                                },
                                                                "containerExitCode": {
                                                                    "type": "integer"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "isLatest": {
                                        "type": "boolean"
                                    }
                                }
                            },
                            "description": "job attempts"
                        },
                        "contentType": "application/json"
                    }
                }
            }
        ]
    },
    {
        "description": "get /api/v2/jobs/{user}~{job}/job-attempts/{attemptIndex}",
        "tests": [
            {
                "operation": {
                    "tag": "job history",
                    "operationId": "getJobAttempt",
                    "parameters": [],
                    "response": {
                        "statusCode": "200",
                        "schema": {
                            "type": "object",
                            "description": "job attempt",
                            "properties": {
                                "jobName": {
                                    "type": "string"
                                },
                                "frameworkName": {
                                    "type": "string"
                                },
                                "uid": {
                                    "type": "string"
                                },
                                "userName": {
                                    "type": "string"
                                },
                                "state": {
                                    "type": "string"
                                },
                                "originState": {
                                    "type": "string"
                                },
                                "maxAttemptCount": {
                                    "type": "integer"
                                },
                                "attemptIndex": {
                                    "type": "integer"
                                },
                                "jobStartedTime": {
                                    "type": "integer"
                                },
                                "attemptStartedTime": {
                                    "type": "integer"
                                },
                                "attemptCompletedTime": {
                                    "type": "integer"
                                },
                                "exitCode": {
                                    "type": "integer"
                                },
                                "exitPhrase": {
                                    "type": "string"
                                },
                                "exitType": {
                                    "type": "string"
                                },
                                "exitDiagnostics": {
                                    "type": "object",
                                    "properties": {
                                        "diagnosticsSummary": {
                                            "type": "string"
                                        },
                                        "runtime": {
                                            "type": "object",
                                            "properties": {
                                                "exitCode": {
                                                    "type": "integer"
                                                },
                                                "originUserExitCode": {
                                                    "type": "integer"
                                                },
                                                "errorLogs": {
                                                    "type": "object",
                                                    "properties": {
                                                        "user": {
                                                            "type": "string"
                                                        },
                                                        "platform": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "launcher": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "appExitTriggerMessage": {
                                    "type": "string"
                                },
                                "appExitTriggerTaskRoleName": {
                                    "type": "string"
                                },
                                "appExitTriggerTaskIndex": {
                                    "type": "integer"
                                },
                                "appExitSpec": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "phrase": {
                                            "type": "string"
                                        },
                                        "issuer": {
                                            "type": "string"
                                        },
                                        "causer": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "stage": {
                                            "type": "string"
                                        },
                                        "behavior": {
                                            "type": "string"
                                        },
                                        "reaction": {
                                            "type": "string"
                                        },
                                        "reason": {
                                            "type": "string"
                                        },
                                        "repro": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "solution": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "appExitDiagnostics": {
                                    "type": "string"
                                },
                                "appExitMessages": {
                                    "type": "object",
                                    "properties": {
                                        "container": {
                                            "type": "string"
                                        },
                                        "runtime": {
                                            "type": "object",
                                            "properties": {
                                                "exitCode": {
                                                    "type": "integer"
                                                },
                                                "originUserExitCode": {
                                                    "type": "integer"
                                                },
                                                "errorLogs": {
                                                    "type": "object",
                                                    "properties": {
                                                        "user": {
                                                            "type": "string"
                                                        },
                                                        "platform": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "launcher": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "totalGpuNumber": {
                                    "type": "integer"
                                },
                                "totalTasknumber": {
                                    "type": "integer"
                                },
                                "totalTaskRoleNumber": {
                                    "type": "integer"
                                },
                                "taskRoles": {
                                    "type": "object",
                                    "properties": {
                                        "taskrole": {
                                            "type": "object",
                                            "properties": {
                                                "taskRoleStatus": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "taskStatuses": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "taskIndex": {
                                                                "type": "integer"
                                                            },
                                                            "taskState": {
                                                                "type": "string"
                                                            },
                                                            "containerId": {
                                                                "type": "string"
                                                            },
                                                            "containerIp": {
                                                                "type": "string"
                                                            },
                                                            "containerGpus": {
                                                                "type": "string"
                                                            },
                                                            "containerLog": {
                                                                "type": "string"
                                                            },
                                                            "containerExitCode": {
                                                                "type": "integer"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "isLatest": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "contentType": "application/json"
                    }
                }
            }
        ]
    },
    {
        "description": "get /api/v2/kubernetes/nodes",
        "tests": [
            {
                "operation": {
                    "tag": "kubernetes",
                    "operationId": "getK8sNodes",
                    "parameters": [],
                    "response": {
                        "statusCode": "200"
                    }
                }
            }
        ]
    },
    {
        "description": "get /api/v2/kubernetes/pods",
        "tests": [
            {
                "operation": {
                    "tag": "kubernetes",
                    "operationId": "getK8sPods",
                    "parameters": [],
                    "response": {
                        "statusCode": "200"
                    }
                }
            }
        ]
    }
]
